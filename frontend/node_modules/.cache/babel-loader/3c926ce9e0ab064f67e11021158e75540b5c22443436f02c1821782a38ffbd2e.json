{"ast":null,"code":"var _jsxFileName = \"/home/sanjay/Desktop/cms-headless/frontend/src/components/EntityList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { readEntities } from '../utils/api';\nimport LoadingSpinner from './LoadingSpinner';\nimport ErrorMessage from './ErrorMessage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EntityList = ({\n  onEntitySelect\n}) => {\n  _s();\n  const [entities, setEntities] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchEntities = async () => {\n      try {\n        const fetchedEntities = await readEntities();\n        setEntities(fetchedEntities);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchEntities();\n  }, []);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      message: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Entities\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"space-y-2\",\n      children: entities.map(entity => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"bg-gray-100 p-2 rounded-md cursor-pointer hover:bg-gray-200\",\n        onClick: () => onEntitySelect(entity),\n        children: entity\n      }, entity, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(EntityList, \"7PsX2mQ0+LZ48hjVM7drprqN/8I=\");\n_c = EntityList;\nvar _c;\n$RefreshReg$(_c, \"EntityList\");","map":{"version":3,"names":["React","useState","useEffect","readEntities","LoadingSpinner","ErrorMessage","jsxDEV","_jsxDEV","EntityList","onEntitySelect","_s","entities","setEntities","isLoading","setIsLoading","error","setError","fetchEntities","fetchedEntities","err","message","fileName","_jsxFileName","lineNumber","columnNumber","className","children","map","entity","onClick","_c","$RefreshReg$"],"sources":["/home/sanjay/Desktop/cms-headless/frontend/src/components/EntityList.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { readEntities } from '../utils/api';\nimport LoadingSpinner from './LoadingSpinner';\nimport ErrorMessage from './ErrorMessage';\n\nconst EntityList = ({ onEntitySelect }) => {\n  const [entities, setEntities] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchEntities = async () => {\n      try {\n        const fetchedEntities = await readEntities();\n        setEntities(fetchedEntities);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchEntities();\n  }, []);\n\n  if (isLoading) {\n    return <LoadingSpinner />;\n  }\n\n  if (error) {\n    return <ErrorMessage message={error} />;\n  }\n\n  return (\n    <div className=\"p-4\">\n      <h2 className=\"text-2xl font-bold mb-4\">Entities</h2>\n      <ul className=\"space-y-2\">\n        {entities.map((entity) => (\n          <li\n            key={entity}\n            className=\"bg-gray-100 p-2 rounded-md cursor-pointer hover:bg-gray-200\"\n            onClick={() => onEntitySelect(entity)}\n          >\n            {entity}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,YAAY,QAAQ,cAAc;AAC3C,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EACzC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,MAAMe,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,eAAe,GAAG,MAAMf,YAAY,CAAC,CAAC;QAC5CS,WAAW,CAACM,eAAe,CAAC;MAC9B,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZH,QAAQ,CAACG,GAAG,CAACC,OAAO,CAAC;MACvB,CAAC,SAAS;QACRN,YAAY,CAAC,KAAK,CAAC;MACrB;IACF,CAAC;IAEDG,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIJ,SAAS,EAAE;IACb,oBAAON,OAAA,CAACH,cAAc;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC3B;EAEA,IAAIT,KAAK,EAAE;IACT,oBAAOR,OAAA,CAACF,YAAY;MAACe,OAAO,EAAEL;IAAM;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACzC;EAEA,oBACEjB,OAAA;IAAKkB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBnB,OAAA;MAAIkB,SAAS,EAAC,yBAAyB;MAAAC,QAAA,EAAC;IAAQ;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrDjB,OAAA;MAAIkB,SAAS,EAAC,WAAW;MAAAC,QAAA,EACtBf,QAAQ,CAACgB,GAAG,CAAEC,MAAM,iBACnBrB,OAAA;QAEEkB,SAAS,EAAC,6DAA6D;QACvEI,OAAO,EAAEA,CAAA,KAAMpB,cAAc,CAACmB,MAAM,CAAE;QAAAF,QAAA,EAErCE;MAAM,GAJFA,MAAM;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKT,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAAAd,EAAA,CA5CKF,UAAU;AAAAsB,EAAA,GAAVtB,UAAU;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}